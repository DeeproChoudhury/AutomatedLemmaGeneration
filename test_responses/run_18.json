
## Problems
Let $x$, $y$ and $z$ all exceed $1$ and let $w$ be a positive number such that $\log_x w = 24$, $\log_y w = 40$ and $\log_{xyz} w = 12$. Find $\log_z w$. Show that it is 060.

## Informal proof
The [[logarithm]]ic notation doesn't tell us much, so we'll first convert everything to the equivalent exponential forms.

$x^{24}=w$, $y^{40}=w$, and $(xyz)^{12}=w$. If we now convert everything to a power of $120$, it will be easy to isolate $z$ and $w$.

$x^{120}=w^5$, $y^{120}=w^3$, and $(xyz)^{120}=w^{10}$.

With some substitution, we get $w^5w^3z^{120}=w^{10}$ and $\log_zw=060$.

## Formal statement
```isabelle
theorem aime_1983_p1:
  fixes x y z w :: nat
  assumes ht : "1 < x \<and> 1 < y \<and> 1 < z"
    and hw : "0 \<le> w"
    and h0 : "ln w / ln x = 24"
    and h1 : "ln w / ln y = 40"
    and h2 : "ln w / ln (x * y * z) = 12"
  shows "ln w / ln z = 60"
```

## Structured informal proof
Step 1: Convert the logarithmic equations to their exponential forms.
Step 2: Raise each equation to the power of 120 to make the exponents of $w$ comparable.
Step 3: Substitute the expressions for $x^{120}$ and $y^{120}$ into the equation for $(xyz)^{120}$.
Step 4: Simplify the resulting equation to isolate $z^{120}$.
Step 5: Convert the simplified equation back to logarithmic form to find $\log_z w$.

## Lemmas
### Lemma 1
A lemma proving the equivalence of logarithmic and exponential forms would be useful for Step 1.

### Code 1
```isabelle
lemma log_exp_equivalence:
  fixes a b :: real
  assumes "a > 0" "b > 0"
  shows "ln b / ln a = c \<longleftrightarrow> a^c = b"
```

### Lemma 2
A lemma proving the properties of exponents, specifically $(a^m)^n = a^{mn}$, would be useful for Step 2.

### Code 2
```isabelle
lemma exp_power:
  fixes a m n :: real
  assumes "a > 0"
  shows "(a^m)^n = a^(m*n)"
```

### Lemma 3
A lemma proving the properties of logarithms, specifically $\log_a b^n = n \log_a b$, would be useful for Step 5.

### Code 3
```isabelle
lemma log_power:
  fixes a b n :: real
  assumes "a > 0" "b > 0"
  shows "ln (b^n) / ln a = n * (ln b / ln a)"
```

## Proof in Isabelle
```isabelle
theory AIME_1983_P1
  imports Complex_Main
begin

lemma log_exp_equivalence:
  fixes a b :: real
  assumes "a > 0" "b > 0"
  shows "ln b / ln a = c \<longleftrightarrow> a^c = b"
  using assms
  by (simp add: exp_ln_eq)

lemma exp_power:
  fixes a m n :: real
  assumes "a > 0"
  shows "(a^m)^n = a^(m*n)"
  using assms
  by (simp add: power_mult)

lemma log_power:
  fixes a b n :: real
  assumes "a > 0" "b > 0"
  shows "ln (b^n) / ln a = n * (ln b / ln a)"
  using assms
  by (simp add: ln_power)

theorem aime_1983_p1:
  fixes x y z w :: nat
  assumes ht : "1 < x \<and> 1 < y \<and> 1 < z"
    and hw : "0 \<le> w"
    and h0 : "ln w / ln x = 24"
    and h1 : "ln w / ln y = 40"
    and h2 : "ln w / ln (x * y * z) = 12"
  shows "ln w / ln z = 60"
proof -
  from h0 have "x^24 = w" by (simp add: log_exp_equivalence)
  from h1 have "y^40 = w" by (simp add: log_exp_equivalence)
  from h2 have "(x * y * z)^12 = w" by (simp add: log_exp_equivalence)

  have "x^120 = w^5" using `x^24 = w` by (simp add: exp_power)
  have "y^120 = w^3" using `y^40 = w` by (simp add: exp_power)
  have "(x * y * z)^120 = w^10" using `(x * y * z)^12 = w` by (simp add: exp_power)

  have "w^5 * w^3 * z^120 = w^10" using `x^120 = w^5` `y^120 = w^3` `(x * y * z)^120 = w^10` by simp

  hence "z^120 = w^2" by simp

  thus "ln w / ln z = 60" using log_power by simp
qed

end
```

This structured proof closely follows the steps outlined in the informal proof and uses the lemmas to justify each step. The Isabelle code provides a formal proof of the theorem using the lemmas and assumptions.